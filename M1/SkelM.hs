module SkelM where

-- Haskell module generated by the BNF converter

import AbsM
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transLine :: Line -> Result
transLine x = case x of
  Cmd strings instruction -> failure x
transInstruction :: Instruction -> Result
transInstruction x = case x of
  Nop -> failure x
  Hlt -> failure x
  Lim string integer -> failure x
  Mov string1 string2 -> failure x
  Add string1 string2 string3 -> failure x
  Mul string1 string2 string3 -> failure x
  Neg string1 string2 -> failure x
  Prn string -> failure x
  Jmp string -> failure x
  Beq string1 string2 string3 -> failure x
  Blt string1 string2 string3 -> failure x
  Lor string1 string2 string3 -> failure x
  Bne string1 string2 string3 -> failure x
  Bge string1 string2 string3 -> failure x
  AddI string integer1 integer2 -> failure x
  MulI string integer1 integer2 -> failure x
  NegI string integer -> failure x

